package Admin;

import Koneksi.Koneksi;
import Login.session;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class DataServiceAdmin extends javax.swing.JFrame {

    Connection conn;
    Statement stmt;
    ResultSet rs;
    PreparedStatement ps;
    
    private DefaultTableModel model;
    
    public DataServiceAdmin() {
        initComponents();
        
        model = new DefaultTableModel();
        tabeldataservice.setModel(model);
        model.addColumn("ID Service");
        model.addColumn("Tanggal");
        model.addColumn("Customer");
        model.addColumn("No Hp Customer");
        model.addColumn("Merek Hp");
        model.addColumn("Diagnosis Kerusakan");
        model.addColumn("ID Teknisi");
        model.addColumn("Nama Teknisi");
        model.addColumn("Keahlian Teknisi");
        model.addColumn("No Hp Teknisi");
        model.addColumn("Username");
        
        ShowData();
    }
    
    public void ShowData(){

        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        try{
            conn = Koneksi.getConnection();
            stmt = conn.createStatement();

            // Query Lihat
            String sql = "SELECT * FROM DataService";

            // Eksekusi
            rs = stmt.executeQuery(sql);
            while(rs.next()){
                Object[] o = new Object[11];
                o[0] = rs.getInt("IdService");
                o[1] = rs.getString("TanggalService");
                o[2] = rs.getString("NamaCust");
                o[3] = rs.getString("NoHpCust");
                o[4] = rs.getString("MerekHp");
                o[5] = rs.getString("Diagnosis");
                o[6] = rs.getString("IdTeknisi");
                o[7] = rs.getString("NamaTeknisi");
                o[8] = rs.getString("KeahlianTeknisi");
                o[9] = rs.getString("NoHpTeknisi");
                o[10] = rs.getString("Username");
                model.addRow(o);
            }
            rs.close();
            stmt.close();

        }catch (Exception Error){
            System.out.println("" + Error);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabeldataservice = new javax.swing.JTable();
        btnKembali = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(175, 211, 226));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabeldataservice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Service", "Tanggal", "Customer", "Nomor Hp Customer", "Merek Hp", "Diagnosis", "ID Teknisi", "Nama Teknisi", "Keahlian Teknisi", "Nomor Hp Teknisi", "Username"
            }
        ));
        jScrollPane1.setViewportView(tabeldataservice);

        btnKembali.setBackground(new java.awt.Color(25, 167, 206));
        btnKembali.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 14)); // NOI18N
        btnKembali.setForeground(new java.awt.Color(255, 255, 255));
        btnKembali.setText("Kembali");
        btnKembali.setBorder(null);
        btnKembali.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnKembaliMouseClicked(evt);
            }
        });

        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/iconfinder-search-4341327_120553.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 883, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnKembaliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKembaliMouseClicked
        setVisible(false);
    }//GEN-LAST:event_btnKembaliMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        try {
            conn = Koneksi.getConnection();

            String sql = "SELECT * FROM DataService WHERE IdService LIKE ? OR NamaCust LIKE ? OR IdTeknisi LIKE ? OR NamaTeknisi LIKE ? OR Username LIKE ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, "%" + txtCari.getText() + "%");
            ps.setString(2, "%" + txtCari.getText() + "%");
            ps.setString(3, "%" + txtCari.getText() + "%");
            ps.setString(4, "%" + txtCari.getText() + "%");
            ps.setString(5, "%" + txtCari.getText() + "%");
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tabeldataservice.getModel();
            model.setRowCount(0); // Mengosongkan tabel sebelum menampilkan data hasil pencarian

            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();

            if (!rs.next()) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                ShowData();
            } else {
                do {
                    Object[] o = new Object[11];
                    o[0] = rs.getInt("IdService");
                    o[1] = rs.getString("TanggalService");
                    o[2] = rs.getString("NamaCust");
                    o[3] = rs.getString("NoHpCust");
                    o[4] = rs.getString("MerekHp");
                    o[5] = rs.getString("Diagnosis");
                    o[6] = rs.getString("IdTeknisi");
                    o[7] = rs.getString("NamaTeknisi");
                    o[8] = rs.getString("KeahlianTeknisi");
                    o[9] = rs.getString("NoHpTeknisi");
                    o[10] = rs.getString("Username");
                    model.addRow(o);
                } while (rs.next());
            }

            ps.close();
            rs.close();
        } catch (Exception Error) {
            System.out.println("" + Error);
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
        try {
            conn = Koneksi.getConnection();

            String sql = "SELECT * FROM DataService WHERE IdService LIKE ? OR NamaCust LIKE ? OR IdTeknisi LIKE ? OR NamaTeknisi LIKE ? OR Username LIKE ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, "%" + txtCari.getText() + "%");
            ps.setString(2, "%" + txtCari.getText() + "%");
            ps.setString(3, "%" + txtCari.getText() + "%");
            ps.setString(4, "%" + txtCari.getText() + "%");
            ps.setString(5, "%" + txtCari.getText() + "%");
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tabeldataservice.getModel();
            model.setRowCount(0); // Mengosongkan tabel sebelum menampilkan data hasil pencarian

            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();

            if (!rs.next()) {
                ShowData();
            } else {
                do {
                    Object[] o = new Object[11];
                    o[0] = rs.getInt("IdService");
                    o[1] = rs.getString("TanggalService");
                    o[2] = rs.getString("NamaCust");
                    o[3] = rs.getString("NoHpCust");
                    o[4] = rs.getString("MerekHp");
                    o[5] = rs.getString("Diagnosis");
                    o[6] = rs.getString("IdTeknisi");
                    o[7] = rs.getString("NamaTeknisi");
                    o[8] = rs.getString("KeahlianTeknisi");
                    o[9] = rs.getString("NoHpTeknisi");
                    o[10] = rs.getString("Username");
                    model.addRow(o);
                } while (rs.next());
            }

            ps.close();
            rs.close();
        } catch (Exception Error) {
            System.out.println("" + Error);
        }
    }//GEN-LAST:event_txtCariKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataServiceAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataServiceAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataServiceAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataServiceAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataServiceAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKembali;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabeldataservice;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
